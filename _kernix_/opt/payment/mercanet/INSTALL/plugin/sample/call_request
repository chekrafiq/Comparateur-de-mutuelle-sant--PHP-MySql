#! /bin/sh

#------------------------------------------------------------------
# Topic	  : Exemple SHELL de traitement de la requête de paiement
# Version : 500
#
# 	Dans cet exemple, on affiche un formulaire HTML
#	de connection à l'internaute.
#
#------------------------------------------------------------------


#	Affichage du header html

echo "Content-Type: text/html"
echo ""
echo "<HTML><HEAD><TITLE>MERCANET - Paiement Securise sur Internet</TITLE></HEAD>"
echo "<BODY bgcolor=\"#ffffff\">"
echo "<Font color=\"#000000\">"
echo "<center><H1>Test de l'API plug-in MERCANET</H1></center></Font><br><br>"
echo "<HR>"


	#	Affectation des paramètres obligatoires

	parm="merchant_id=082584341411111"
	parm="$parm merchant_country=fr"
	parm="$parm amount=100"
	parm="$parm currency_code=978"


    # Initialisation du chemin du fichier pathfile (à modifier)
    #   ex : parm="$parm pathfile=/home/repertoire/pathfile
    #
    # Cette variable est facultative. Si elle n'est pas renseignée,
    # l'API positionne la valeur à "./pathfile".

	#	parm="$parm pathfile=chemin_du_fichier_pathfile"

	#	Si aucun transaction_id n'est affecté,
	#	request en génère un automatiquement 
	#	à partir de heure/minute/seconde
	#	Référez-vous au Guide du Programmeur pour
	#	les réserves émises sur cette fonctionnalité
	#
	#	parm="$parm transaction_id=123456"



	#	Affectation dynamique des autres paramètres
	# 	Les valeurs proposées ne sont que des exemples
	# 	Les champs et leur utilisation sont expliqués dans le Dictionnaire des données
	#
	# 	parm="$parm normal_return_url=http://www.maboutique.fr/cgi-bin/call_response"
	#	parm="$parm cancel_return_url=http://www.maboutique.fr/cgi-bin/call_response"
	#	parm="$parm automatic_response_url=http://www.maboutique.fr/cgi-bin/call_autoresponse"
	#	parm="$parm language=fr"
	#	parm="$parm payment_means=CB,2,VISA,2,MASTERCARD,2"
	#	parm="$parm header_flag=no"
	#	parm="$parm capture_day="
	#	parm="$parm capture_mode="
	#	parm="$parm bgcolor="
	#	parm="$parm block_align="
	#	parm="$parm block_order="
	#	parm="$parm textcolor="
	#	parm="$parm receipt_complement="
	#	parm="$parm caddie="
	#	parm="$parm customer_id="
	#	parm="$parm customer_email="
	#	parm="$parm customer_ip_address="
	#	parm="$parm data="
	#	parm="$parm return_context="
	#	parm="$parm target="
	#	parm="$parm order_id="


	#	Les valeurs suivantes ne sont utilisables qu'en pré-production
	#	Elles nécessitent l'installation de vos fichiers sur le serveur de paiement
	#
	# 	parm="$parm normal_return_logo="
	# 	parm="$parm cancel_return_logo="
	# 	parm="$parm submit_logo="
	# 	parm="$parm logo_id="
	# 	parm="$parm logo_id2="
	# 	parm="$parm advert="
	# 	parm="$parm background_id="
	# 	parm="$parm templatefile="


	#	insertion de la commande en base de données (optionnel)
	#	A développer en fonction de votre système d'information

	# Initialisation du chemin de l'executable request (à modifier)
	# ex :	path_bin="/home/repertoire/bin/request"
	#

	path_bin="chemin_de_l'executable_request"

	#	Appel du binaire

	result=`$path_bin $parm`

	#	sortie de la fonction : $result=!code!error!buffer!
	#	    - code=0	: la fonction génère une page html contenue dans la variable buffer
	#	    - code=-1 	: La fonction retourne un message d'erreur dans la variable error

	#  Récupération des paramètres

	code=`echo $result| awk ' BEGIN {FS="!"} {print $2}'`
	error=`echo $result| awk ' BEGIN {FS="!"} {print $3}'`
	message=`echo $result| awk ' BEGIN {FS="!"} {print $4}'`

	#  analyse du code retour
	
	if [ "$code" = "" -a "$error" = "" ] ; then
  	echo "<BR><CENTER>erreur appel request</CENTER><BR>"
  	echo "executable request non trouve $path_bin"
  	
  	# Erreur, affiche le message d'erreur
  	
	else
		if [ "$code" -eq "-1" ] ; then
		echo "<center><b><h2>Erreur appel API de paiement.</h2></center></b>"
		echo "<br><br><br>"
		echo " message erreur : $error <br>"
		
		# OK, affichage du formulaire HTML
		
		else
		echo "<br><br>"
		echo "  $message <br>"
		
		fi
	
	fi
	

echo "</BODY></HTML>"


# end of file
